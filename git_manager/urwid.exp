#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Aug 11 16:43:59 2021
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "gi"
expect -exact "gi"
send -- "t add .\r"
expect -exact "\[?2004l\r\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "gi"
expect -exact "gi"
send -- "t commit -m \"Nth Commit\"\r"
expect -exact "\[?2004l\r\r
\[master 33e8d7e\] Nth Commit\r
 10 files changed, 153 insertions(+), 6 deletions(-)\r
 create mode 100644 .gitignore\r
 create mode 100755 script.exp\r
 create mode 100644 status_results.txt\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "gi"
expect -exact "gi"
send -- "t push origin master\r"
expect -exact "\[?2004l\r\r
Enumerating objects: 19, done.\r
Counting objects:   5% (1/18)\rCounting objects:  11% (2/18)\rCounting objects:  16% (3/18)\rCounting objects:  22% (4/18)\rCounting objects:  27% (5/18)\rCounting objects:  33% (6/18)\rCounting objects:  38% (7/18)\rCounting objects:  44% (8/18)\rCounting objects:  50% (9/18)\rCounting objects:  55% (10/18)\rCounting objects:  61% (11/18)\rCounting objects:  66% (12/18)\rCounting objects:  72% (13/18)\rCounting objects:  77% (14/18)\rCounting objects:  83% (15/18)\rCounting objects:  88% (16/18)\rCounting objects:  94% (17/18)\rCounting objects: 100% (18/18)\rCounting objects: 100% (18/18), done.\r
Delta compression using up to 8 threads\r
Compressing objects:  16% (1/6)\rCompressing objects:  33% (2/6)\rCompressing objects:  50% (3/6)\rCompressing objects:  66% (4/6)\rCompressing objects:  83% (5/6)\rCompressing objects: 100% (6/6)\rCompressing objects: 100% (6/6), done.\r
Writing objects:   9% (1/11)\rWriting objects:  18% (2/11)\rWriting objects:  27% (3/11)\rWriting objects:  36% (4/11)\rWriting objects:  45% (5/11)\rWriting objects:  54% (6/11)\rWriting objects:  63% (7/11)\rWriting objects:  72% (8/11)\rWriting objects:  81% (9/11)\rWriting objects:  90% (10/11)\rWriting objects: 100% (11/11)\rWriting objects: 100% (11/11), 2.15 KiB | 2.15 MiB/s, done.\r
Total 11 (delta 2), reused 0 (delta 0), pack-reused 0\r
Username for 'https://notabug.org': "
send -- "micaldas\r"
expect -exact "micaldas\r
Password for 'https://micaldas@notabug.org': "
send -- "N/!8XyJ-QIkZ\r"
expect -exact "\r
To https://notabug.org/micaldas/bkmks_urwid.git\r
   56cd9eb..33e8d7e  master -> master\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "\[A"
expect -exact "git push origin master"
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "_"
expect -exact "_ master"
send -- "g"
expect -exact "g master"
send -- "o"
expect -exact "o master"
send -- "g"
expect -exact "g master"
send -- "s"
expect -exact "s master"
send -- "\r"
expect -exact "\[?2004l\r\r
Enumerating objects: 19, done.\r
Counting objects:   5% (1/18)\rCounting objects:  11% (2/18)\rCounting objects:  16% (3/18)\rCounting objects:  22% (4/18)\rCounting objects:  27% (5/18)\rCounting objects:  33% (6/18)\rCounting objects:  38% (7/18)\rCounting objects:  44% (8/18)\rCounting objects:  50% (9/18)\rCounting objects:  55% (10/18)\rCounting objects:  61% (11/18)\rCounting objects:  66% (12/18)\rCounting objects:  72% (13/18)\rCounting objects:  77% (14/18)\rCounting objects:  83% (15/18)\rCounting objects:  88% (16/18)\rCounting objects:  94% (17/18)\rCounting objects: 100% (18/18)\rCounting objects: 100% (18/18), done.\r
Delta compression using up to 8 threads\r
Compressing objects:  16% (1/6)\rCompressing objects:  33% (2/6)\rCompressing objects:  50% (3/6)\rCompressing objects:  66% (4/6)\rCompressing objects:  83% (5/6)\rCompressing objects: 100% (6/6)\rCompressing objects: 100% (6/6), done.\r
Writing objects:   9% (1/11)\rWriting objects:  18% (2/11)\rWriting objects:  27% (3/11)\rWriting objects:  36% (4/11)\rWriting objects:  45% (5/11)\rWriting objects:  54% (6/11)\rWriting objects:  63% (7/11)\rWriting objects:  72% (8/11)\rWriting objects:  81% (9/11)\rWriting objects:  90% (10/11)\rWriting objects: 100% (11/11)\rWriting objects: 100% (11/11), 2.15 KiB | 2.15 MiB/s, done.\r
Total 11 (delta 2), reused 0 (delta 0), pack-reused 0\r
Username for 'http://localhost:3000': "
send -- "mic\r"
expect -exact "mic\r
Password for 'http://mic@localhost:3000': "
send -- "xxxx\r"
expect -exact "\r
To http://localhost:3000/mic/bkmks_urwid.git\r
   56cd9eb..33e8d7e  master -> master\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- ""
expect eof
