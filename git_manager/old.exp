#!/usr/bin/expect -f
#
# This Expect script was generated by autoexpect on Wed Aug 11 16:55:15 2021
# Expect and autoexpect were both written by Don Libes, NIST.
#
# Note that autoexpect does not guarantee a working script.  It
# necessarily has to guess about certain things.  Two reasons a script
# might fail are:
#
# 1) timing - A surprising number of programs (rn, ksh, zsh, telnet,
# etc.) and devices discard or ignore keystrokes that arrive "too
# quickly" after prompts.  If you find your new script hanging up at
# one spot, try adding a short sleep just before the previous send.
# Setting "force_conservative" to 1 (see below) makes Expect do this
# automatically - pausing briefly before sending each character.  This
# pacifies every program I know of.  The -c flag makes the script do
# this in the first place.  The -C flag allows you to define a
# character to toggle this mode off and on.

set force_conservative 0  ;# set to 1 to force conservative mode even if
			  ;# script wasn't run conservatively originally
if {$force_conservative} {
	set send_slow {1 .1}
	proc send {ignore arg} {
		sleep .1
		exp_send -s -- $arg
	}
}

#
# 2) differing output - Some programs produce different output each time
# they run.  The "date" command is an obvious example.  Another is
# ftp, if it produces throughput statistics at the end of a file
# transfer.  If this causes a problem, delete these patterns or replace
# them with wildcards.  An alternative is to use the -p flag (for
# "prompt") which makes Expect only look for the last line of output
# (i.e., the prompt).  The -P flag allows you to define a character to
# toggle this mode off and on.
#
# Read the man page for more info.
#
# -Don


set timeout -1
spawn $env(SHELL)
match_max 100000
expect -exact "\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "gi"
expect -exact "gi"
send -- "yt"
expect -exact " "
send -- ""
expect -exact " "
send -- "t add .\r"
expect -exact "\[?2004l\r\r
warning: adding embedded git repository: redis_tutorial/retwis\r
\[33mhint: You've added another git repository inside your current repository.\[m\r
\[33mhint: Clones of the outer repository will not contain the contents of\[m\r
\[33mhint: the embedded repository and will not know how to obtain it.\[m\r
\[33mhint: If you meant to add a submodule, use:\[m\r
\[33mhint: \[m\r
\[33mhint: 	git submodule add <url> redis_tutorial/retwis\[m\r
\[33mhint: \[m\r
\[33mhint: If you added this path by mistake, you can remove it from the\[m\r
\[33mhint: index with:\[m\r
\[33mhint: \[m\r
\[33mhint: 	git rm --cached redis_tutorial/retwis\[m\r
\[33mhint: \[m\r
\[33mhint: See \"git help submodule\" for more information.\[m\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "\[A"
expect -exact "git add ."
send -- "\r"
expect -exact "\[?2004l\r\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "gi"
expect -exact "gi"
send -- "t commit -m \"Nth Commit\"\r"
expect -exact "\[?2004l\r\r
\[master fc6592b\] Nth Commit\r
 42 files changed, 1300 insertions(+)\r
 create mode 100644 .gitignore\r
 create mode 100644 aranha/aranha/__init__.py\r
 create mode 100644 aranha/aranha/aranha.csv\r
 create mode 100644 aranha/aranha/items.py\r
 create mode 100644 aranha/aranha/middlewares.py\r
 create mode 100644 aranha/aranha/pipelines.py\r
 create mode 100644 aranha/aranha/settings.py\r
 create mode 100644 aranha/aranha/spiders/__init__.py\r
 create mode 100644 aranha/aranha/spiders/aranha.csv\r
 create mode 100644 aranha/aranha/spiders/aranha_info.py\r
 create mode 100644 aranha/scrapy.cfg\r
 create mode 100644 guardian_newspaper/guardian/guardian/__init__.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/items.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/middlewares.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/pipelines.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/settings.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/spiders/__init__.py\r
 create mode 100644 guardian_newspaper/guardian/guardian/spiders/guardian.csv\r
 create mode 100644 guardian_newspaper/guardian/guardian/spiders/guardian_info.py\r
 create mode 100644 guardian_newspaper/guardian/scrapy.cfg\r
 create mode 100644 main_scraper.py\r
 create mode 100644 scraper.py\r
 create mode 100755 script.exp\r
 create mode 100644 status_results.txt\r
 create mode 100644 web_scraper/politico/politico/__init__.py\r
 create mode 100644 web_scraper/politico/politico/items.py\r
 create mode 100644 web_scraper/politico/politico/middlewares.py\r
 create mode 100644 web_scraper/politico/politico/pipelines.py\r
 create mode 100644 web_scraper/politico/politico/settings.py\r
 create mode 100644 web_scraper/politico/politico/spiders/__init__.py\r
 create mode 100644 web_scraper/politico/politico/spiders/politico.csv\r
 create mode 100644 web_scraper/politico/politico/spiders/politico.py\r
 create mode 100644 web_scraper/politico/scrapy.cfg\r
 create mode 100644 web_scraper/web_scraper/scrapy.cfg\r
 create mode 100644 web_scraper/web_scraper/web_scraper/__init__.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/items.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/middlewares.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/pipelines.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/settings.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/spiders/__init__.py\r
 create mode 100644 web_scraper/web_scraper/web_scraper/spiders/cousteau.csv\r
 create mode 100644 web_scraper/web_scraper/web_scraper/spiders/cousteau.py\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "hu"
expect -exact "hu"
send -- "go push origin master\r"
expect -exact "\[?2004l\r\r
zsh: command not found: hugo\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "\[A"
expect -exact "hugo push origin master"
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- ""
expect -exact "\[P\[19C \[20D"
send -- ""
expect -exact "\[P\[19C \[20D"
send -- ""
expect -exact "h\[P\[19C \[20D"
send -- ""
expect -exact "\[P\[19C \[20D"
send -- "g"
expect -exact "g push origin master\[19D"
send -- "i"
expect -exact "gi push origin master\[19D"
send -- "t"
expect -exact "t push origin master\[19D"
send -- "\r"
expect -exact "\[?2004l\r\r
Enumerating objects: 51, done.\r
Counting objects:   1% (1/51)\rCounting objects:   3% (2/51)\rCounting objects:   5% (3/51)\rCounting objects:   7% (4/51)\rCounting objects:   9% (5/51)\rCounting objects:  11% (6/51)\rCounting objects:  13% (7/51)\rCounting objects:  15% (8/51)\rCounting objects:  17% (9/51)\rCounting objects:  19% (10/51)\rCounting objects:  21% (11/51)\rCounting objects:  23% (12/51)\rCounting objects:  25% (13/51)\rCounting objects:  27% (14/51)\rCounting objects:  29% (15/51)\rCounting objects:  31% (16/51)\rCounting objects:  33% (17/51)\rCounting objects:  35% (18/51)\rCounting objects:  37% (19/51)\rCounting objects:  39% (20/51)\rCounting objects:  41% (21/51)\rCounting objects:  43% (22/51)\rCounting objects:  45% (23/51)\rCounting objects:  47% (24/51)\rCounting objects:  49% (25/51)\rCounting objects:  50% (26/51)\rCounting objects:  52% (27/51)\rCounting objects:  54% (28/51)\rCounting objects:  56% (29/51)\rCounting objects:  58% (30/51)\rCounting objects:  60% (31/51)\rCounting objects:  62% (32/51)\rCounting objects:  64% (33/51)\rCounting objects:  66% (34/51)\rCounting objects:  68% (35/51)\rCounting objects:  70% (36/51)\rCounting objects:  72% (37/51)\rCounting objects:  74% (38/51)\rCounting objects:  76% (39/51)\rCounting objects:  78% (40/51)\rCounting objects:  80% (41/51)\rCounting objects:  82% (42/51)\rCounting objects:  84% (43/51)\rCounting objects:  86% (44/51)\rCounting objects:  88% (45/51)\rCounting objects:  90% (46/51)\rCounting objects:  92% (47/51)\rCounting objects:  94% (48/51)\rCounting objects:  96% (49/51)\rCounting objects:  98% (50/51)\rCounting objects: 100% (51/51)\rCounting objects: 100% (51/51), done.\r
Delta compression using up to 8 threads\r
Compressing objects:   2% (1/48)\rCompressing objects:   4% (2/48)\rCompressing objects:   6% (3/48)\rCompressing objects:   8% (4/48)\rCompressing objects:  10% (5/48)\rCompressing objects:  12% (6/48)\rCompressing objects:  14% (7/48)\rCompressing objects:  16% (8/48)\rCompressing objects:  18% (9/48)\rCompressing objects:  20% (10/48)\rCompressing objects:  22% (11/48)\rCompressing objects:  25% (12/48)\rCompressing objects:  27% (13/48)\rCompressing objects:  29% (14/48)\rCompressing objects:  31% (15/48)\rCompressing objects:  33% (16/48)\rCompressing objects:  35% (17/48)\rCompressing objects:  37% (18/48)\rCompressing objects:  39% (19/48)\rCompressing objects:  41% (20/48)\rCompressing objects:  43% (21/48)\rCompressing objects:  45% (22/48)\rCompressing objects:  47% (23/48)\rCompressing objects:  50% (24/48)\rCompressing objects:  52% (25/48)\rCompressing objects:  54% (26/48)\rCompressing objects:  56% (27/48)\rCompressing objects:  58% (28/48)\rCompressing objects:  60% (29/48)\rCompressing objects:  62% (30/48)\rCompressing objects:  64% (31/48)\rCompressing objects:  66% (32/48)\rCompressing objects:  68% (33/48)\rCompressing objects:  70% (34/48)\rCompressing objects:  72% (35/48)\rCompressing objects:  75% (36/48)\rCompressing objects:  77% (37/48)\rCompressing objects:  79% (38/48)\rCompressing objects:  81% (39/48)\rCompressing objects:  83% (40/48)\rCompressing objects:  85% (41/48)\rCompressing objects:  87% (42/48)\rCompressing objects:  89% (43/48)\rCompressing objects:  91% (44/48)\rCompressing objects:  93% (45/48)\rCompressing objects:  95% (46/48)\rCompressing objects:  97% (47/48)\rCompressing objects: 100% (48/48)\rCompressing objects: 100% (48/48), done.\r
Writing objects:   2% (1/50)\rWriting objects:   4% (2/50)\rWriting objects:   6% (3/50)\rWriting objects:   8% (4/50)\rWriting objects:  10% (5/50)\rWriting objects:  12% (6/50)\rWriting objects:  16% (8/50)\rWriting objects:  20% (10/50)\rWriting objects:  24% (12/50)\rWriting objects:  30% (15/50)\rWriting objects:  32% (16/50)\rWriting objects:  34% (17/50)\rWriting objects:  36% (18/50)\rWriting objects:  40% (20/50)\rWriting objects:  44% (22/50)\rWriting objects:  46% (23/50)\rWriting objects:  48% (24/50)\rWriting objects:  50% (25/50)\rWriting objects:  52% (26/50)\rWriting objects:  54% (27/50)\rWriting objects:  56% (28/50)\rWriting objects:  58% (29/50)\rWriting objects:  60% (30/50)\rWriting objects:  62% (31/50)\rWriting objects:  64% (32/50)\rWriting objects:  66% (33/50)\rWriting objects:  68% (34/50)\rWriting objects:  70% (35/50)\rWriting objects:  72% (36/50)\rWriting objects:  74% (37/50)\rWriting objects:  76% (38/50)\rWriting objects:  78% (39/50)\rWriting objects:  80% (40/50)\rWriting objects:  82% (41/50)\rWriting objects:  84% (42/50)\rWriting objects:  86% (43/50)\rWriting objects:  88% (44/50)\rWriting objects:  90% (45/50)\rWriting objects:  92% (46/50)\rWriting objects:  94% (47/50)\rWriting objects:  96% (48/50)\rWriting objects:  98% (49/50)\rWriting objects: 100% (50/50)\rWriting objects: 100% (50/50), 12.73 KiB | 4.24 MiB/s, done.\r
Total 50 (delta 17), reused 0 (delta 0), pack-reused 0\r
Username for 'https://notabug.org': "
send -- "micaldas\r"
expect -exact "micaldas\r
Password for 'https://micaldas@notabug.org': "
send -- "N/!8XyJ-QIkZ\r"
expect -exact "\r
To https://notabug.org/micaldas/old_alternative_projects.git\r
   c33a170..fc6592b  master -> master\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- "\[A"
expect -exact "git push origin master"
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[D"
expect -exact ""
send -- "\[C"
expect -exact "\[1C"
send -- "_"
expect -exact "_ master"
send -- "g"
expect -exact "g master"
send -- "o"
expect -exact "o master"
send -- "g"
expect -exact "g master"
send -- "s"
expect -exact "s master"
send -- "\r"
expect -exact "\[?2004l\r\r
Enumerating objects: 51, done.\r
Counting objects:   1% (1/51)\rCounting objects:   3% (2/51)\rCounting objects:   5% (3/51)\rCounting objects:   7% (4/51)\rCounting objects:   9% (5/51)\rCounting objects:  11% (6/51)\rCounting objects:  13% (7/51)\rCounting objects:  15% (8/51)\rCounting objects:  17% (9/51)\rCounting objects:  19% (10/51)\rCounting objects:  21% (11/51)\rCounting objects:  23% (12/51)\rCounting objects:  25% (13/51)\rCounting objects:  27% (14/51)\rCounting objects:  29% (15/51)\rCounting objects:  31% (16/51)\rCounting objects:  33% (17/51)\rCounting objects:  35% (18/51)\rCounting objects:  37% (19/51)\rCounting objects:  39% (20/51)\rCounting objects:  41% (21/51)\rCounting objects:  43% (22/51)\rCounting objects:  45% (23/51)\rCounting objects:  47% (24/51)\rCounting objects:  49% (25/51)\rCounting objects:  50% (26/51)\rCounting objects:  52% (27/51)\rCounting objects:  54% (28/51)\rCounting objects:  56% (29/51)\rCounting objects:  58% (30/51)\rCounting objects:  60% (31/51)\rCounting objects:  62% (32/51)\rCounting objects:  64% (33/51)\rCounting objects:  66% (34/51)\rCounting objects:  68% (35/51)\rCounting objects:  70% (36/51)\rCounting objects:  72% (37/51)\rCounting objects:  74% (38/51)\rCounting objects:  76% (39/51)\rCounting objects:  78% (40/51)\rCounting objects:  80% (41/51)\rCounting objects:  82% (42/51)\rCounting objects:  84% (43/51)\rCounting objects:  86% (44/51)\rCounting objects:  88% (45/51)\rCounting objects:  90% (46/51)\rCounting objects:  92% (47/51)\rCounting objects:  94% (48/51)\rCounting objects:  96% (49/51)\rCounting objects:  98% (50/51)\rCounting objects: 100% (51/51)\rCounting objects: 100% (51/51), done.\r
Delta compression using up to 8 threads\r
Compressing objects:   2% (1/48)\rCompressing objects:   4% (2/48)\rCompressing objects:   6% (3/48)\rCompressing objects:   8% (4/48)\rCompressing objects:  10% (5/48)\rCompressing objects:  12% (6/48)\rCompressing objects:  14% (7/48)\rCompressing objects:  16% (8/48)\rCompressing objects:  18% (9/48)\rCompressing objects:  20% (10/48)\rCompressing objects:  22% (11/48)\rCompressing objects:  25% (12/48)\rCompressing objects:  27% (13/48)\rCompressing objects:  29% (14/48)\rCompressing objects:  31% (15/48)\rCompressing objects:  33% (16/48)\rCompressing objects:  35% (17/48)\rCompressing objects:  37% (18/48)\rCompressing objects:  39% (19/48)\rCompressing objects:  41% (20/48)\rCompressing objects:  43% (21/48)\rCompressing objects:  45% (22/48)\rCompressing objects:  47% (23/48)\rCompressing objects:  50% (24/48)\rCompressing objects:  52% (25/48)\rCompressing objects:  54% (26/48)\rCompressing objects:  56% (27/48)\rCompressing objects:  58% (28/48)\rCompressing objects:  60% (29/48)\rCompressing objects:  62% (30/48)\rCompressing objects:  64% (31/48)\rCompressing objects:  66% (32/48)\rCompressing objects:  68% (33/48)\rCompressing objects:  70% (34/48)\rCompressing objects:  72% (35/48)\rCompressing objects:  75% (36/48)\rCompressing objects:  77% (37/48)\rCompressing objects:  79% (38/48)\rCompressing objects:  81% (39/48)\rCompressing objects:  83% (40/48)\rCompressing objects:  85% (41/48)\rCompressing objects:  87% (42/48)\rCompressing objects:  89% (43/48)\rCompressing objects:  91% (44/48)\rCompressing objects:  93% (45/48)\rCompressing objects:  95% (46/48)\rCompressing objects:  97% (47/48)\rCompressing objects: 100% (48/48)\rCompressing objects: 100% (48/48), done.\r
Writing objects:   2% (1/50)\rWriting objects:   4% (2/50)\rWriting objects:   6% (3/50)\rWriting objects:   8% (4/50)\rWriting objects:  10% (5/50)\rWriting objects:  12% (6/50)\rWriting objects:  16% (8/50)\rWriting objects:  20% (10/50)\rWriting objects:  24% (12/50)\rWriting objects:  30% (15/50)\rWriting objects:  32% (16/50)\rWriting objects:  34% (17/50)\rWriting objects:  36% (18/50)\rWriting objects:  40% (20/50)\rWriting objects:  44% (22/50)\rWriting objects:  46% (23/50)\rWriting objects:  48% (24/50)\rWriting objects:  50% (25/50)\rWriting objects:  52% (26/50)\rWriting objects:  54% (27/50)\rWriting objects:  56% (28/50)\rWriting objects:  58% (29/50)\rWriting objects:  60% (30/50)\rWriting objects:  62% (31/50)\rWriting objects:  64% (32/50)\rWriting objects:  66% (33/50)\rWriting objects:  68% (34/50)\rWriting objects:  70% (35/50)\rWriting objects:  72% (36/50)\rWriting objects:  74% (37/50)\rWriting objects:  76% (38/50)\rWriting objects:  78% (39/50)\rWriting objects:  80% (40/50)\rWriting objects:  82% (41/50)\rWriting objects:  84% (42/50)\rWriting objects:  86% (43/50)\rWriting objects:  88% (44/50)\rWriting objects:  90% (45/50)\rWriting objects:  92% (46/50)\rWriting objects:  94% (47/50)\rWriting objects:  96% (48/50)\rWriting objects:  98% (49/50)\rWriting objects: 100% (50/50)\rWriting objects: 100% (50/50), 12.73 KiB | 4.24 MiB/s, done.\r
Total 50 (delta 17), reused 0 (delta 0), pack-reused 0\r
Username for 'http://localhost:3000': "
send -- "mic\r"
expect -exact "mic\r
Password for 'http://mic@localhost:3000': "
send -- "xxxx\r"
expect -exact "\r
To http://localhost:3000/mic/old_alternative_projects.git\r
   c33a170..fc6592b  master -> master\r
\[1m\[7m#\[27m\[1m\[0m                                                                                                                                                                       \r \r\r\[0m\[27m\[24m\[Jmicaldas# \[K\[?2004h"
send -- ""
expect eof
